@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    //var user = await UserManager.GetUserAsync(User);
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <span class="row" style="margin-bottom:.5rem;margin-left:.5rem;flex-wrap: nowrap;">
                <label for="status" style="margin-bottom: auto;white-space: nowrap;">Status : </label>
                <select name="status" id="status" style="margin-left: .5rem; max-width: 300px;">
                    <option value="0">Available</option>
                    <option value="1">Busy</option>
                    @*<option value="2">Idle</option>
                <option value="3">Offline</option>*@
                </select>
            </span>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link text-dark" onclick='getMyInfoArea();event.preventDefault();' asp-area="" asp-controller="" asp-action=""><span id="upperUsername">@User.Identity.Name</span>!</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Logout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
}